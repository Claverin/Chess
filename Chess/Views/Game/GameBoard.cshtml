@model Chess.Models.Game

@{
    ViewData["Title"] = "Chess Application";
}

<head>
    <link href="~/css/GameBoard.css" rel="stylesheet" />
</head>

<div class="container mt-4">
    <div class="chess-board">
        @foreach (var cell in Model.Board.Cells)
        {
            var bgColor = cell.AvaibleMove ? "#A020F0" : cell.FieldColor;
            var piece = cell.Piece;
            var isActive = piece?.Colour == Model.OnMove;

            <div class="cell"
                 style="background-color:@bgColor;"
                 data-x="@cell.Field.x" data-y="@cell.Field.y">

                @* Debug — top left *@
                @if (Model.DebugMode)
                {
                    <div class="debug-coords">x=@cell.Field.x y=@cell.Field.y</div>
                }

                @* Piece rendering *@
                @if (piece != null)
                {
                    if (isActive)
                    {
                        <a asp-controller="Game"
                           asp-action="MovePiece"
                           asp-route-pieceId="@piece.Id"
                           title="Piece ID: @piece.Id">
                            <img class="piece-img" src="@piece.Image" draggable="false" />
                        </a>
                    }
                    else
                    {
                        <img class="piece-img" src="@piece.Image" draggable="false" />
                    }

                    @if (Model.DebugMode)
                    {
                        <div class="debug-id">ID: @piece.Id</div>
                    }
                }
            </div>
        }
    </div>

    <div class="text-center mt-4">
        <strong>Move:</strong> @Model.OnMove <br /><br />
        <strong>White Score:</strong> @Model.Players[0].Score<br />
        <strong>Black Score:</strong> @Model.Players[1].Score<br />
        <strong>Number of Players:</strong> @Model.NumberOfPlayers
    </div>
</div>
